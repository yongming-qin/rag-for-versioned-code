n_success_no_rag: 37, n_success_bm25: 36, n_success_monobert: 39
bm25 and monobert different cases: [(0, True, False, True), (7, False, False, True), (22, False, False, True), (23, True, True, False), (24, True, True, False), (30, False, False, True), (35, False, False, True), (38, False, False, True), (40, False, False, True), (53, True, True, False), (63, False, True, False), (70, False, True, False), (72, True, True, False), (78, False, False, True), (90, True, False, True)]
success_no_rag, but failed in bm25 or monobert: [(0, True, False, True), (4, True, False, False), (23, True, True, False), (24, True, True, False), (31, True, False, False), (32, True, False, False), (53, True, True, False), (54, True, False, False), (66, True, False, False), (71, True, False, False), (72, True, True, False), (74, True, False, False), (88, True, False, False), (90, True, False, True), (97, True, False, False)]




n_success_no_rag: 38, n_success_bm25: 36, n_success_monobert: 35
bm25 and monobert different cases: [(1, True, False, True), (7, False, False, True), (8, True, False, True), (11, False, True, False), (21, False, True, False), (22, False, False, True), (23, True, True, False), (31, False, False, True), (33, False, True, False), (39, False, False, True), (48, False, True, False), (53, True, True, False), (56, False, True, False), (60, True, False, True), (63, False, True, False), (68, False, False, True), (69, False, False, True), (70, False, False, True), (71, True, False, True), (87, True, True, False), (88, True, True, False), (93, True, True, False), (94, False, True, False)]
success_no_rag, but failed in bm25 or monobert: [(0, True, False, False), (1, True, False, True), (8, True, False, True), (23, True, True, False), (30, True, False, False), (53, True, True, False), (60, True, False, True), (65, True, False, False), (66, True, False, False), (71, True, False, True), (74, True, False, False), (79, True, False, False), (87, True, True, False), (88, True, True, False), (90, True, False, False), (91, True, False, False), (93, True, True, False)]



n_success_no_rag: 17, n_success_bm25: 21, n_success_monobert: 25
bm25 and monobert different cases: [(1, False, True, False), (3, False, True, False), (7, False, False, True), (8, True, False, True), (11, True, False, True), (18, False, False, True), (21, False, True, False), (22, False, False, True), (27, False, False, True), (33, False, False, True)]
success_no_rag, but failed in bm25 or monobert: [(8, True, False, True), (11, True, False, True), (31, True, False, False)]
success_no_rag_list: [False, False, False, False, False, False, False, False, True, False, False, True, True, True, False, True, False, True, False, False, False, False, False, True, False, False, False, False, True, True, True, True, False, False, True, False, True, True, False, False, False, False, False, False, False, True, False, True, False, True]


n_success_no_rag: 19, n_success_bm25: 22, n_success_monobert: 23
bm25 and monobert different cases: [(3, False, True, False), (7, False, False, True), (11, True, True, False), (17, True, False, True), (21, True, True, False), (22, False, False, True), (27, False, True, False), (33, False, False, True), (35, False, True, False), (39, False, False, True), (40, False, False, True)]
success_no_rag, but failed in bm25 or monobert: [(0, True, False, False), (8, True, False, False), (11, True, True, False), (17, True, False, True), (21, True, True, False)]
success_no_rag_list: [True, True, False, False, False, False, False, False, True, False, False, True, True, True, False, True, False, True, False, False, False, True, False, True, False, False, False, False, True, True, True, False, False, False, True, False, True, True, False, False, False, False, False, False, False, True, False, True, False, True]
success_no_rag_list true: [[ 0][ 1][ 8][11][12][13][15][17][21][23][28][29][30][34][36][37][45][47][49]]
success_no_rag_list false: [[ 2][ 3][ 4][ 5][ 6][ 7][ 9][10][14][16][18][19][20] [22][24][25][26][27][31][32][33][35][38][39][40][41][42][43][44][46][48]]




n_success_no_rag: 0, n_success_bm25: 3, n_success_monobert: 3
bm25 and monobert different cases: [(1, False, True, False), (7, False, False, True)]
success_no_rag, but failed in bm25 or monobert: []
success_no_rag_list: [False, False, False, False, False, False, False, False, False, False]
success_no_rag_list true: []
success_no_rag_list false: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]






n_success_no_rag: 0, n_success_bm25: 2, n_success_monobert: 0
bm25 and monobert different cases: [(1, False, True, False), (3, False, True, False)]
success_no_rag, but failed in bm25 or monobert: []
success_no_rag_list: [False, False, False, False, False]
success_no_rag_list true: []
success_no_rag_list false: [0, 1, 2, 3, 4]


n_success_no_rag: 2, n_success_bm25: 2, n_success_monobert: 0
bm25 and monobert different cases: [(1, True, True, False), (3, False, True, False)]
success_no_rag, but failed in bm25 or monobert: [(0, True, False, False), (1, True, True, False)]
success_no_rag_list: [True, True, False, False, False]
success_no_rag_list true: [0, 1]
success_no_rag_list false: [2, 3, 4]


n_success_no_rag: 1, n_success_bm25: 2, n_success_monobert: 0
bm25 and monobert different cases: [(1, False, True, False), (3, False, True, False)]
success_no_rag, but failed in bm25 or monobert: [(0, True, False, False)]
success_no_rag_list: [True, False, False, False, False]
success_no_rag_list true: [0]
success_no_rag_list false: [1, 2, 3, 4]



n_success_no_rag: 2, n_success_bm25: 0, n_success_monobert: 0
bm25 and monobert different cases: []
success_no_rag, but failed in bm25 or monobert: []
success_no_rag_list: [True, True, False, False, False]
success_no_rag_list true: [0, 1]
success_no_rag_list false: [2, 3, 4]

================================================================
Set deterministic outputs from chatgpt now.

n_success_no_rag: 1, n_success_bm25: 0, n_success_monobert: 0
bm25 and monobert different cases: []
success_no_rag, but failed in bm25 or monobert: []
success_no_rag_list: [True, False, False, False, False]
success_no_rag_list true: [0]
success_no_rag_list false: [1, 2, 3, 4]

